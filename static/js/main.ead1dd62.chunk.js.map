{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","placeholder","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","urls","description","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"iOAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DCwBJC,E,4MA1BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGvB,IAAD,OACP,OACE,qBAAKM,UAAU,aAAf,SACE,sBAAMA,UAAU,UAAUD,SAAUE,KAAKN,aAAzC,SACE,sBAAKK,UAAU,QAAf,UACE,iDACA,uBACEE,KAAK,OACLC,YAAY,SACZC,MAAOH,KAAKR,MAAMC,KAClBW,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEb,KAAMY,EAAEE,OAAOJ,sB,GAlBtCK,IAAMC,WC+BfC,G,wDA9Bb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAWRc,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKN,SAAS,CAAEU,WAdhB,EAAKxB,MAAQ,CAAEwB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YALL,E,gEASjBnB,KAAKa,SAASC,QAAQM,iBAAiB,OAAQpB,KAAKW,Y,+BAW5C,IAAD,EACuBX,KAAKH,MAAMwB,MAAjCC,EADD,EACCA,KAAMC,EADP,EACOA,YACd,OACE,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUzB,KAAKR,MAAMwB,QAA7C,SACE,qBAAKU,IAAK1B,KAAKa,SAAUc,IAAKL,EAAKM,QAASC,IAAKN,U,GAzBjCf,IAAMC,YCUfqB,EARG,SAACjC,GACjB,IAAMkC,EAASlC,EAAMkC,OAAOC,KAAI,SAACX,GAC/B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAG/B,OAAO,qBAAKlC,UAAU,aAAf,SAA6BgC,KCkBvBG,E,4MArBb1C,MAAQ,CAAEuC,OAAQ,I,EAElBI,e,uCAAiB,WAAO1C,GAAP,eAAA2C,EAAA,sEAEQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAO/C,KAHJ,OAETgD,EAFS,OAMf,EAAKnC,SAAS,CAAEyB,OAAQU,EAASC,KAAKC,UANvB,2C,6GAUf,OACE,sBAAK5C,UAAU,eAAeyB,MAAO,CAAEoB,UAAW,QAAlD,UACE,cAAC,EAAD,CAAW9C,SAAUE,KAAKmC,iBAC1B,cAAC,EAAD,CAAWJ,OAAQ/B,KAAKR,MAAMuC,gB,GAhBpBvB,IAAMC,WCDxBoC,IAASC,OACT,cAAC,EAAD,IACGC,SAASC,eAAe,W","file":"static/js/main.ead1dd62.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.unsplash.com\",\n  headers: {\n    Authorization: \"Client-ID tUz9RWmyxp2eU4NIJWsTtFhR4GUvFtHl2aI3ytg322U\",\n  },\n});\n","import React from \"react\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui segment\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <label>Image Search</label>\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              value={this.state.term}\n              onChange={(e) => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { spans: 0 };\n\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height / 10);\n\n    this.setState({ spans });\n  };\n\n  render() {\n    const { urls, description } = this.props.image;\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} src={urls.regular} alt={description} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./ImageList.css\";\nimport ImageCard from \"./ImageCard\";\n\nconst ImageList = (props) => {\n  const images = props.images.map((image) => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n\n  return <div className=\"image-list\">{images}</div>;\n};\n\nexport default ImageList;\n","import React from \"react\";\nimport unsplash from \"../api/unsplash\";\nimport SearchBar from \"./SearchBar\";\nimport ImageList from \"./ImageList\";\n\nclass App extends React.Component {\n  state = { images: [] };\n\n  onSearchSubmit = async (term) => {\n    //async allows us to use await sytax\n    const response = await unsplash.get(\"/search/photos\", {\n      params: { query: term },\n    });\n\n    this.setState({ images: response.data.results });\n  };\n\n  render() {\n    return (\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\n        <SearchBar onSubmit={this.onSearchSubmit} />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n<App />\r\n  ,document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}